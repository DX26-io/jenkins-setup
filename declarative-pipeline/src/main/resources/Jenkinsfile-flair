pipeline {
	agent any
	tools {
		jdk "jdk11"
	}
	stages {
		stage("Build and Upload") {
			steps {
				checkout([
					$class: 'GitSCM',
					clearWorkspace: true,
					branches: [
						[name: "*/${env.GIT_BRANCH_NAME ?: 'master'}"]
					],
					extensions: [
						[$class: 'WipeWorkspace'],
					],
					userRemoteConfigs: [
						[credentialsId: Boolean.parseBoolean(env.GIT_USE_SSH_KEY) == Boolean.TRUE ?
							env.GIT_SSH_CREDENTIAL_ID : env.GIT_CREDENTIAL_ID, url: env.GIT_REPOSITORY]
					]
				])

				checkout([
					$class: 'GitSCM',
					branches: [
						[name: "*/${env.SCRIPTS_BRANCH}"]
					],
					extensions: [
						[$class: 'WipeWorkspace'],
						[$class: 'RelativeTargetDirectory', relativeTargetDir: "${env.WORKSPACE}@tools"]
					],
					userRemoteConfigs: [
						[credentialsId: env.GIT_CREDENTIAL_ID, url: env.SCRIPTS_URL]
					]
				])

				script {
					if (!env.PIPELINE_VERSION) {
						env.PIPELINE_VERSION = VersionNumber(
							versionNumberString: env.PIPELINE_VERSION_FORMAT ?: '${BUILD_DATE_FORMATTED, \"yyMMdd_HHmmss\"}-VERSION',
							versionPrefix: env.PIPELINE_VERSION_PREFIX ?: '1.0.0.M1-'
						)
					}

					if (env.REPO_WITH_BINARIES_CREDENTIAL_ID) {
						withCredentials([usernamePassword(credentialsId: env.REPO_WITH_BINARIES_CREDENTIAL_ID, passwordVariable: 'PASS', usernameVariable: 'USER')]) {
							env.M2_SETTINGS_REPO_USERNAME = USER
							env.M2_SETTINGS_REPO_PASSWORD = PASS
						}
					}

					if (env.GIT_CREDENTIAL_ID) {
						withCredentials([usernamePassword(credentialsId: env.GIT_CREDENTIAL_ID, passwordVariable: 'PASS', usernameVariable: 'USER')]) {
							env.GIT_USERNAME = USER
							env.GIT_PASSWORD = PASS
						}
					}
				}
				sh """#!/bin/bash
				${
					if (Boolean.parseBoolean(env.GIT_USE_SSH_KEY) == Boolean.TRUE) {
						return """
						eval "\$(ssh-agent -s)"
						ssh-add /usr/share/jenkins/gitsshkey
						"""
					}
					return ""
				}
				echo "First running api compatibility check, so that what we commit and upload at the end is just built project"
				. \${WORKSPACE}@tools/src/main/bash/build_api_compatibility_check.sh

				echo "Running the build and upload script"
				. \${WORKSPACE}@tools/src/main/bash/build_and_upload.sh
				"""
			}
		}
		
	}
	post {
		always {
			junit '**/surefire-reports/*.xml,**/test-results/**/*.xml'
			archive "**/build/**/k8s/*.yml"
			archive "**/target/**/k8s/*.yml"
		}
	}
}
